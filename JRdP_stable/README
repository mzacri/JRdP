#© 2019 CNRS-LAAS

#Author: M’Barek Zacri

#Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

#1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

#2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#### README Joueur Rdp:

Email: mzacri@gmail.com 

=======Description:

L'outil JRdP permet de configurer graphiquement les réseaux de Petri selon les règles définies dans doc/manuel.pdf . JRdP + Le RdP configuré représente  un client TCL ( puisque JRdP est écrit en TCL et utilise TCL-genomix ). Les composants à orchestrer doivent être compilés et installés. JRdP permet de les charger et connecter les ports afin de mettre en place la structure à orchestrer à travers le RdP de configuration.

JRdP utilise l'outil nd de tina comme interface graphique permettant de tracer les réseaux de Petri et les enrichir par les conditions et les actions de chaque transition.

=======Prérequis: 
1- L'outil nd de TINA ( License Binaire Freeware ): version > 3.5.0 . http://projects.laas.fr/tina/home.php.
2- TCL-GENOMIX ( License 2-clause-bsd ): https://git.openrobots.org/projects/tcl-genomix ou avec robotpkg : robotpkg/supervision/tcl-genomix 
3- GENOMIX  ( License 2-clause-bsd ): //git.openrobots.org/robots/genomix.git ou robotpkg/net/genomix
4- VECTCL (OpenSource): https://auriocus.github.io/VecTcl/design/60.html
5- ELTCLSH ( License 2-clause-bsd ): https://www.openrobots.org/wiki/eltclsh


======Étapes d'utilisation:

Les étapes d’utilisation de JRdP sont données comme suit :
—  Compiler et installer la structure GenoM à orchestrer .
—  Configurer le plan de navigation à travers nd. Il est utile de noter que pendant la phase de conception tous les outils de nd peuvent êtres utilisés. La chose qu’on recommande pour valider la structure du réseau de Petri(structural analysis) ou simuler l’évolution de la structure ( stepper simulator ).
—  Sauvegarder le fichier .ndr de la configuration dans le dossier de JRdP sous le nomSource_Graphique.ndr.
—  Lancer le fichier tcl Joueur_Rdp.tcl avec eltclsh ou tclsh en se plaçant dans le dossier duJRdP ( Très important ).
—  Suivre les consignes du Joueur.
—  Pendant la phase de conception, une fenêtre de l’outil nd stepper simulator s’ouvre pourpermettre de suivre l’évolution du marquage en dynamique.
—  Le résultat du jeu est enregistré dans le fichier Logs.txt qui se trouvera dans le dossierdu joueur.—Une fois le développement du plan de navigation est terminé. JRdP fournit une version duJoueur non interactive avec la même configuration que celle crée de manière interactive.La version s’appelle JRdP_Embadded et elle peut être lancé avec eltclsh de la mêmemanière que précédemment.

   
